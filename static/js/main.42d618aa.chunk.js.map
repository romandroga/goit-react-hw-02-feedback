{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App.jsx","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","statisticsTitle","FeedbackOptions","options","onLeaveFeedback","Object","keys","button","type","onClick","option","Section","title","children","sectionTitle","Notification","message","App","state","onLeaveFeddback","e","value","target","attributes","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,gBAAkB,sC,gBCApCD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,aAAe,gC,8LCyBlBC,EArBI,SAAC,GAAD,IACjBC,EADiB,EACjBA,KAAMC,EADW,EACXA,QAASC,EADE,EACFA,IAAKC,EADH,EACGA,MAAOC,EADV,EACUA,mBADV,OAGjB,oCACE,uBAAGC,UAAWC,IAAOC,iBAArB,cACA,oCAAUP,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,O,wBCWWI,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAAsB,EAC3BC,OAAOC,KAAKH,GADe,mBACjDT,EADiD,KAC3CC,EAD2C,KAClCC,EADkC,KAEhDW,EAAWP,IAAXO,OACR,OACE,oCACE,4BAAQC,KAAK,SAAST,UAAWQ,EAAQE,QAASL,EAAiBM,OAAQhB,GAA3E,QACA,4BAAQc,KAAK,SAAST,UAAWQ,EAAQE,QAASL,EAAiBM,OAAQf,GAA3E,WACA,4BAAQa,KAAK,SAAST,UAAWQ,EAAQE,QAASL,EAAiBM,OAAQd,GAA3E,S,gBCKSe,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,uBAAGd,UAAWC,IAAOc,cAAeF,GACnCC,ICIUE,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,2BAAIA,ICIeC,E,4MACnBC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPuB,gBAAkB,SAACC,GAAO,IAChBC,EAAUD,EAAEE,OAAOC,WAAWb,OAA9BW,MACR,EAAKG,SAAL,eAAiBH,EAAQ,EAAKH,MAAMG,GAAS,K,EAE/CI,mBAAqB,WAAO,IAAD,EACM,EAAKP,MACpC,OAFyB,EACjBxB,KADiB,EACXC,QADW,EACFC,K,EAGzB8B,gCAAkC,WAChC,OAAOC,KAAKC,MAAM,EAAKV,MAAMxB,KAAO,EAAK+B,qBAAuB,M,uDAGxD,IAAD,EACwBI,KAAKX,MAA5BxB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,kBAAC,EAAD,CAASgB,MAAM,yBACb,kBAAC,EAAD,CACET,QAAS0B,KAAKX,MACdd,gBAAiByB,KAAKV,kBAEvBU,KAAKJ,qBACJ,kBAAC,EAAD,CACE/B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgC,KAAKJ,qBACZ3B,mBAAoB+B,KAAKH,oCAE3B,kBAAC,EAAD,CACEV,QAAS,2B,GAnCYc,aCHjCC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.42d618aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsTitle\":\"Statistics_statisticsTitle__3C4Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3gIkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Section_sectionTitle__1pRsP\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\n\r\nconst Statistics = ({\r\n  good, neutral, bad, total, positivePercentage,\r\n}) => (\r\n  <>\r\n    <p className={styles.statisticsTitle}>Statistics</p>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive feedback: {positivePercentage}%</p>\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const [good, neutral, bad] = Object.keys(options);\r\n  const { button } = styles;\r\n  return (\r\n    <>\r\n      <button type=\"button\" className={button} onClick={onLeaveFeedback} option={good}>Good</button>\r\n      <button type=\"button\" className={button} onClick={onLeaveFeedback} option={neutral}>Neutral</button>\r\n      <button type=\"button\" className={button} onClick={onLeaveFeedback} option={bad}>Bad</button>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <p className={styles.sectionTitle}>{title}</p>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\n\r\n// Components\r\nimport Statistics from './Statistics/Statistics';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Section from './Section/Section';\r\nimport Notification from './Notification/Notification';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  onLeaveFeddback = (e) => {\r\n    const { value } = e.target.attributes.option;\r\n    this.setState({ [value]: this.state[value] + 1 });\r\n  };\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    return Math.round(this.state.good / this.countTotalFeedback() * 100);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={this.state}\r\n          onLeaveFeedback={this.onLeaveFeddback}\r\n        />\r\n        {this.countTotalFeedback() ?\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          /> :\r\n          <Notification\r\n            message={'No feedback given'}/>\r\n        }\r\n\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}